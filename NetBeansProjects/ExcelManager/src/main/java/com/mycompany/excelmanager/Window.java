/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.excelmanager;

import java.awt.Cursor;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;

/**
 *
 * @author Ramon
 */
public class Window extends javax.swing.JFrame {

    /**
     * Creates new form Window
     */
    public Window() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        tpath = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Select file");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tpath.setText("C:\\Users\\Ramon\\Downloads\\to be sorted.xlsx");

        jButton2.setText("Run");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addComponent(tpath, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(64, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(226, 226, 226))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tpath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(40, 40, 40)
                .addComponent(jButton2)
                .addContainerGap(169, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        JFileChooser chooser = new JFileChooser(new File("C:\\Users\\" + System.getProperty("user.name") + "\\Downloads"));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel file", "xlsx");
        chooser.setFileFilter(filter);
        int returnVal = chooser.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            this.tpath.setText(chooser.getSelectedFile().getAbsolutePath());
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            FileInputStream fis = new FileInputStream("c:\\archivo.xlsx");
            Workbook workbook = new XSSFWorkbook(fis);
            Workbook nuevoWorkbook = new XSSFWorkbook();

            for (int sheetIndex = 0; sheetIndex < workbook.getNumberOfSheets(); sheetIndex++) {
                Sheet hoja = workbook.getSheetAt(sheetIndex);

                Row headerRow = hoja.getRow(0);
                List<Columna> columnas = new ArrayList<>();
                Iterator<Cell> headerCellIterator = headerRow.cellIterator();

                while (headerCellIterator.hasNext()) {
                    Cell cell = headerCellIterator.next();
                    //columnas.add(new Columna(cell.getStringCellValue(), cell.getColumnIndex()));
                }

                Collections.sort(columnas);

                // Crear una nueva hoja de trabajo para el archivo de salida
                Sheet nuevaHoja = nuevoWorkbook.createSheet(hoja.getSheetName());

                // Crear una nueva fila de encabezado con las columnas reordenadas
                Row nuevaFilaEncabezado = nuevaHoja.createRow(0);
                for (int j = 0; j < columnas.size(); j++) {
                    int antiguoIndice = columnas.get(j).getIndex();
                    Cell celdaAntigua = headerRow.getCell(antiguoIndice);
                    Cell nuevaCelda = nuevaFilaEncabezado.createCell(j);
                    nuevaCelda.setCellValue(celdaAntigua.getStringCellValue());

                    // Mantener un solo comentario por celda
                    Comment oldComment = celdaAntigua.getCellComment();
                    if (oldComment != null) {
                        Drawing drawing = nuevaHoja.createDrawingPatriarch();
                        ClientAnchor anchor = drawing.createAnchor(0, 0, 0, 0, antiguoIndice, 0, antiguoIndice, 0);
                        Comment newComment = drawing.createCellComment(anchor);
                        newComment.setString(oldComment.getString());
                        nuevaCelda.setCellComment(newComment);
                    }
                }

                // Copiar los datos de la hoja original a la nueva hoja
                int rowNum = 1; // Comenzar desde la segunda fila
                for (Row row : hoja) {
                    Row newRow = nuevaHoja.createRow(rowNum++);
                    int cellNum = 0;
                    for (Cell cell : row) {
                        int antiguoIndice = cell.getColumnIndex();
                        int nuevoIndice = columnas.get(cellNum++).getIndex();
                        Cell newCell = newRow.createCell(nuevoIndice);

                        switch (cell.getCellType()) {
                            case STRING:
                                newCell.setCellValue(cell.getStringCellValue());
                                break;
                            case NUMERIC:
                                newCell.setCellValue(cell.getNumericCellValue());
                                break;
                            // Agrega más casos según sea necesario para otros tipos de celdas
                            default:
                                // Manejo para otros tipos de celdas si es necesario
                                break;
                        }
                    }
                }
            }

            // Guardar el nuevo archivo
            FileOutputStream fos = new FileOutputStream("c:\\archivo_reordenado.xlsx");
            nuevoWorkbook.write(fos);
            nuevoWorkbook.close();
            fos.close();

            System.out.println("El archivo se ha reordenado con éxito con encabezado y varias hojas.");

        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    public boolean esXLSX(String nombreArchivo) {
        return nombreArchivo.endsWith(".xlsx");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Window().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JTextField tpath;
    // End of variables declaration//GEN-END:variables
}
